apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

def computeVersionCode = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', 'HEAD', '--count'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        applicationId "za.co.orderin.jarvisdriver"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        versionCode computeVersionCode()
        versionName "0.84"
        resConfigs "en"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        dataBinding.enabled = true
    }

    signingConfigs {
        debugConfig {
            storeFile file("debug.jks")
            storePassword "***"
            keyAlias "***"
            keyPassword "***"
        }

        releaseConfig {
            storeFile file("release.jks")
            storePassword "***"
            keyAlias "***"
            keyPassword "***"
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debugConfig
            minifyEnabled false
        }

        debugProguard {
            debuggable true
            signingConfig signingConfigs.debugConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
        }

        releaseBeta {
            debuggable false
            signingConfig signingConfigs.debugConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
        }

        release {
            debuggable false
            /*signingConfig signingConfigs.releaseConfig -- add this if you want to sign manually */
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
        }
    }

    flavorDimensions "variant"

    productFlavors {
        production {
            manifestPlaceholders = [HOCKEYAPP_APP_ID: "486d65b96e664fdeb94ff316a72cc681", APPLICATION_ID: "za.co.orderin.jarvisdriver"]
            applicationId "za.co.orderin.jarvisdriver"
            multiDexEnabled true
            minSdkVersion 16
        }
        beta {
            manifestPlaceholders = [HOCKEYAPP_APP_ID: "4020629cd0c248adbe0d0b90ef82e3b8", APPLICATION_ID: "za.co.orderin.jarvisdriver.beta"]
            applicationId "za.co.orderin.jarvisdriver.beta"
            multiDexEnabled true
            minSdkVersion 16
        }
        development {
            manifestPlaceholders = [HOCKEYAPP_APP_ID: "4020629cd0c248adbe0d0b90ef82e3b8", APPLICATION_ID: "za.co.orderin.jarvisdriver.development"]
            applicationId "za.co.orderin.jarvisdriver.development"
            multiDexEnabled true
            minSdkVersion 16 //This is to allow multidex builds to execute faster
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name != 'production') {
            variant.setIgnore(true)
        }
        if (variant.buildType.name == 'debug' && variant.getFlavors().get(0).name == 'beta') {
            variant.setIgnore(true)
        }
        if ((variant.buildType.name == 'debug' || variant.buildType.name == 'debugProguard') && variant.getFlavors().get(0).name == 'production') {
            variant.setIgnore(true)
        }
        if (variant.buildType.name == 'releaseBeta' && variant.getFlavors().get(0).name != 'beta') {
            variant.setIgnore(true)
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:percent:27.1.1'
    implementation 'com.google.android.gms:play-services-analytics:16.0.3'
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'net.hockeyapp.android:HockeySDK:4.0.1'
    implementation 'com.amazonaws:aws-android-sdk-core:2.3.8'
    implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.3.8'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'com.github.VictorAlbertos.RxCache:runtime:1.8.0-2.x'
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
    implementation 'com.patloew.rxlocation:rxlocation:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:2.1.1'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:2.2.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:2.2.0'
    implementation 'com.uber.autodispose:autodispose:1.0.0'
    implementation 'com.uber.autodispose:autodispose-android:1.0.0'
    implementation 'com.uber.autodispose:autodispose-ktx:1.0.0'
    implementation 'me.pushy:sdk:1.0.38'
    implementation 'com.google.dagger:dagger:2.18'
    kapt 'com.google.dagger:dagger-compiler:2.18'
    implementation 'com.gojuno.koptional:koptional:1.1.0'
    implementation 'com.gojuno.koptional:koptional-rxjava2-extensions:1.1.0'
    implementation 'com.andkulikov:transitionseverywhere:1.7.5'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    debugProguardImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    releaseBetaImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "com.android.databinding:compiler:3.1.3"
    implementation 'com.android.support:multidex:1.0.3'

    testImplementation 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
